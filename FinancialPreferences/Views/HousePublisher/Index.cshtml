@{
    ViewData["Title"] = "房屋刊登系統";
}

<div class="container-fluid">
    <!-- 頁面標題 -->
    <div class="row mb-4">
        <div class="col-12">
            <h2 class="text-primary">
                <i class="fas fa-home"></i> 房屋刊登系統
            </h2>
            <hr>
        </div>
    </div>

    <!-- 搜尋和操作區域 -->
    <div class="row mb-3">
        <div class="col-md-8">
            <div class="input-group">
                <input type="text" id="searchInput" class="form-control" placeholder="搜尋房屋名稱或地址...">
                <button class="btn btn-outline-secondary" type="button" id="searchBtn">
                    <i class="fas fa-search"></i> 搜尋
                </button>
            </div>
        </div>
        <div class="col-md-4 text-end">
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#houseModal" onclick="openCreateModal()">
                <i class="fas fa-plus"></i> 新增房屋
            </button>
        </div>
    </div>

    <!-- 房屋列表 -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-body">
                    <!-- 載入指示器 -->
                    <div id="loadingIndicator" class="text-center py-4">
                        <div class="spinner-border text-primary" role="status">
                            <span class="visually-hidden">載入中...</span>
                        </div>
                        <p class="mt-2">正在載入房屋資料...</p>
                    </div>

                    <!-- 錯誤訊息 -->
                    <div id="errorMessage" class="alert alert-danger" style="display: none;">
                        <i class="fas fa-exclamation-triangle"></i>
                        <span id="errorText">載入資料時發生錯誤，請稍後再試。</span>
                    </div>

                    <!-- 無資料訊息 -->
                    <div id="noDataMessage" class="text-center py-4" style="display: none;">
                        <i class="fas fa-home fa-3x text-muted"></i>
                        <h5 class="mt-3 text-muted">尚無房屋資料</h5>
                        <p class="text-muted">點擊上方「新增房屋」按鈕開始建立房屋資料</p>
                    </div>

                    <div class="table-responsive" id="houseTableContainer" style="display: none;">
                        <table class="table table-striped table-hover" id="houseTable">
                            <thead class="table-dark">
                                <tr>
                                    <th>房屋名稱</th>
                                    <th>地址</th>
                                    <th>總價格</th>
                                    <th>坪數</th>
                                    <th>建立時間</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody id="houseTableBody">
                                <!-- 動態載入的房屋資料 -->
                            </tbody>
                        </table>
                    </div>

                    <!-- 分頁 -->
                    <nav aria-label="房屋列表分頁" id="paginationContainer" style="display: none;">
                        <ul class="pagination justify-content-center">
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1">上一頁</a>
                            </li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item">
                                <a class="page-link" href="#">下一頁</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 新增/編輯房屋 Modal -->
<div class="modal fade" id="houseModal" tabindex="-1" aria-labelledby="houseModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="houseModalLabel">新增房屋</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="houseForm">
                    <input type="hidden" id="houseId" name="id">

                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="houseName" class="form-label">房屋名稱 <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="houseName" name="houseName" required maxlength="200">
                                <div class="invalid-feedback">請輸入房屋名稱</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="floorArea" class="form-label">坪數 <span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <input type="number" class="form-control" id="floorArea" name="floorArea" required step="0.01" min="0">
                                    <span class="input-group-text">坪</span>
                                </div>
                                <div class="invalid-feedback">請輸入正確的坪數</div>
                            </div>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="address" class="form-label">地址 <span class="text-danger">*</span></label>
                        <input type="text" class="form-control" id="address" name="address" required maxlength="500">
                        <div class="invalid-feedback">請輸入地址</div>
                    </div>

                    <div class="mb-3">
                        <label for="totalPrice" class="form-label">總價格 <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text">NT$</span>
                            <input type="number" class="form-control" id="totalPrice" name="totalPrice" required min="0" step="1">
                        </div>
                        <div class="invalid-feedback">請輸入正確的價格</div>
                    </div>

                    <div class="mb-3">
                        <label for="description" class="form-label">描述</label>
                        <textarea class="form-control" id="description" name="description" rows="4" maxlength="2000" placeholder="請輸入房屋詳細描述..."></textarea>
                        <div class="form-text">最多 2000 字元</div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-primary" onclick="saveHouse()">
                    <i class="fas fa-save"></i> 儲存
                </button>
            </div>
        </div>
    </div>
</div>

<!-- 房屋詳細資料檢視 Modal -->
<div class="modal fade" id="houseDetailModal" tabindex="-1" aria-labelledby="houseDetailModalLabel" aria-hidden="true" x-data="houseDetailData">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="houseDetailModalLabel">房屋詳細資料</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label fw-bold">房屋名稱</label>
                            <p class="form-control-plaintext" x-text="house.houseName || '-'">-</p>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">總價格</label>
                            <p class="form-control-plaintext text-success fw-bold fs-5" x-text="formattedPrice">-</p>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">坪數</label>
                            <p class="form-control-plaintext" x-text="house.floorArea ? `${house.floorArea} 坪` : '-'">-</p>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label fw-bold">地址</label>
                            <p class="form-control-plaintext" x-text="house.address || '-'">-</p>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">建立時間</label>
                            <p class="form-control-plaintext" x-text="formattedCreatedDate">-</p>
                        </div>
                        <div class="mb-3">
                            <label class="form-label fw-bold">更新時間</label>
                            <p class="form-control-plaintext" x-text="formattedUpdatedDate">-</p>
                        </div>
                    </div>
                </div>
                <div class="mb-3">
                    <label class="form-label fw-bold">描述</label>
                    <div class="border rounded p-3 bg-light">
                        <p class="mb-0" x-text="house.description || '無描述'">無描述</p>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-warning" x-on:click="editFromDetail()" x-show="house.id">
                    <i class="fas fa-edit"></i> 編輯
                </button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">關閉</button>
            </div>
        </div>
    </div>
</div>

<!-- 刪除確認 Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-labelledby="deleteConfirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title text-danger" id="deleteConfirmModalLabel">
                    <i class="fas fa-exclamation-triangle"></i> 確認刪除
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>您確定要刪除房屋 「<span id="deleteHouseName" class="fw-bold"></span>」 嗎？</p>
                <p class="text-muted">此操作無法復原。</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                <button type="button" class="btn btn-danger" onclick="confirmDelete()">
                    <i class="fas fa-trash"></i> 確定刪除
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Alpine.js 資料物件 - 房屋詳細檢視
        document.addEventListener('alpine:init', () => {
            Alpine.data('houseDetailData', () => ({
                house: {
                    id: '',
                    houseName: '',
                    address: '',
                    totalPrice: 0,
                    floorArea: 0,
                    description: '',
                    createdDate: '',
                    updatedDate: ''
                },

                // 計算屬性：格式化價格
                get formattedPrice() {
                    if (!this.house.totalPrice) return '-';
                    return new Intl.NumberFormat('zh-TW', {
                        style: 'currency',
                        currency: 'TWD',
                        minimumFractionDigits: 0
                    }).format(this.house.totalPrice);
                },

                // 計算屬性：格式化建立時間
                get formattedCreatedDate() {
                    if (!this.house.createdDate) return '-';
                    return new Date(this.house.createdDate).toLocaleString('zh-TW');
                },

                // 計算屬性：格式化更新時間
                get formattedUpdatedDate() {
                    if (!this.house.updatedDate) return '-';
                    return new Date(this.house.updatedDate).toLocaleString('zh-TW');
                },

                // 載入房屋資料
                loadHouse(houseData) {
                    this.house = { ...houseData };
                },

                // 從詳細檢視切換到編輯模式
                editFromDetail() {
                    if (this.house.id) {
                        // 關閉詳細檢視 modal
                        const detailModal = bootstrap.Modal.getInstance(document.getElementById('houseDetailModal'));
                        detailModal.hide();

                        // 等待 modal 完全關閉後開啟編輯 modal
                        setTimeout(() => {
                            editHouse(this.house.id);
                            const editModal = new bootstrap.Modal(document.getElementById('houseModal'));
                            editModal.show();
                        }, 300);
                    }
                }
            }))
        });

        // 全域變數
        let currentEditingId = null;
        let currentDeletingId = null;
        let housesData = []; // 儲存房屋資料

        // API 基礎 URL
        const API_BASE_URL = '/api/houses';

        // 頁面載入完成後初始化
        document.addEventListener('DOMContentLoaded', function() {
            console.log('房屋刊登系統已載入');
            loadHouseList(); // 載入房屋列表
        });

        // 載入房屋列表
        async function loadHouseList() {
            try {
                showLoadingIndicator();
                hideErrorMessage();

                console.log('正在從 API 載入房屋資料...');

                const response = await fetch(API_BASE_URL, {
                    method: 'GET',
                    headers:
                     {
                        'Content-Type': 'application/json',
                    }
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const houses = await response.json();
                housesData = houses; // 儲存到全域變數

                console.log('成功載入房屋資料：', houses);

                hideLoadingIndicator();
                renderHouseTable(houses);

            } catch (error) {
                console.error('載入房屋資料時發生錯誤：', error);
                hideLoadingIndicator();
                showErrorMessage('載入房屋資料時發生錯誤：' + error.message);
            }
        }

        // 渲染房屋表格
        function renderHouseTable(houses) {
            const tableBody = document.getElementById('houseTableBody');
            const tableContainer = document.getElementById('houseTableContainer');
            const noDataMessage = document.getElementById('noDataMessage');
            const paginationContainer = document.getElementById('paginationContainer');

            if (!houses || houses.length === 0) {
                // 沒有資料時顯示提示訊息
                tableContainer.style.display = 'none';
                paginationContainer.style.display = 'none';
                noDataMessage.style.display = 'block';
                return;
            }

            // 有資料時顯示表格
            noDataMessage.style.display = 'none';
            tableContainer.style.display = 'block';
            paginationContainer.style.display = 'block';

            // 清空現有內容
            tableBody.innerHTML = '';

            // 生成表格行
            houses.forEach(house => {
                const row = createHouseTableRow(house);
                tableBody.appendChild(row);
            });
        }

        // 建立房屋表格行
        function createHouseTableRow(house) {
            const row = document.createElement('tr');

            // 格式化價格
            const formattedPrice = new Intl.NumberFormat('zh-TW', {
                style: 'currency',
                currency: 'TWD',
                minimumFractionDigits: 0
            }).format(house.totalPrice).replace('NT$', 'NT$');

            // 格式化日期
            const formattedDate = new Date(house.createdDate).toLocaleDateString('zh-TW');

            row.innerHTML = `
                <td>${escapeHtml(house.houseName)}</td>
                <td>${escapeHtml(house.address)}</td>
                <td class="text-success fw-bold">${formattedPrice}</td>
                <td>${house.floorArea} 坪</td>
                <td>${formattedDate}</td>
                <td>
                    <button class="btn btn-sm btn-info me-1" onclick="viewHouse('${house.id}')" data-bs-toggle="modal" data-bs-target="#houseDetailModal">
                        <i class="fas fa-eye"></i> 檢視
                    </button>
                    <button class="btn btn-sm btn-warning me-1" onclick="editHouse('${house.id}')" data-bs-toggle="modal" data-bs-target="#houseModal">
                        <i class="fas fa-edit"></i> 編輯
                    </button>
                    <button class="btn btn-sm btn-danger" onclick="deleteHouse('${house.id}')">
                        <i class="fas fa-trash"></i> 刪除
                    </button>
                </td>
            `;

            return row;
        }

        // HTML 轉義函數
        function escapeHtml(text) {
            if (!text) return '';
            const div = document.createElement('div');
            div.textContent = text;
            return div.innerHTML;
        }

        // 顯示載入指示器
        function showLoadingIndicator() {
            document.getElementById('loadingIndicator').style.display = 'block';
            document.getElementById('houseTableContainer').style.display = 'none';
            document.getElementById('noDataMessage').style.display = 'none';
        }

        // 隱藏載入指示器
        function hideLoadingIndicator() {
            document.getElementById('loadingIndicator').style.display = 'none';
        }

        // 顯示錯誤訊息
        function showErrorMessage(message) {
            document.getElementById('errorText').textContent = message;
            document.getElementById('errorMessage').style.display = 'block';
            document.getElementById('houseTableContainer').style.display = 'none';
            document.getElementById('noDataMessage').style.display = 'none';
        }

        // 隱藏錯誤訊息
        function hideErrorMessage() {
            document.getElementById('errorMessage').style.display = 'none';
        }

        // 根據 ID 尋找房屋資料
        function findHouseById(houseId) {
            return housesData.find(house => house.id === houseId);
        }

        // 開啟新增 Modal
        function openCreateModal() {
            document.getElementById('houseModalLabel').textContent = '新增房屋';
            document.getElementById('houseForm').reset();
            document.getElementById('houseId').value = '';
            currentEditingId = null;

            // 清除驗證樣式
            clearValidationStyles();
        }

        // 開啟編輯 Modal
        function editHouse(houseId) {
            currentEditingId = houseId;
            document.getElementById('houseModalLabel').textContent = '編輯房屋';

            const house = findHouseById(houseId);
            if (house) {
                loadHouseDataForEdit(house);
            } else {
                console.error('找不到指定的房屋：', houseId);
                alert('找不到指定的房屋資料');
            }
        }

        // 從詳細檢視頁面開啟編輯 (保留舊版本以防 Alpine.js 有問題)
        function editHouseFromDetail() {
            document.getElementById('houseDetailModal').addEventListener('hidden.bs.modal', function() {
                editHouse(currentEditingId);
                const editModal = new bootstrap.Modal(document.getElementById('houseModal'));
                editModal.show();
            }, { once: true });

            bootstrap.Modal.getInstance(document.getElementById('houseDetailModal')).hide();
        }

        // 載入編輯資料
        function loadHouseDataForEdit(house) {
            document.getElementById('houseId').value = house.id;
            document.getElementById('houseName').value = house.houseName || '';
            document.getElementById('address').value = house.address || '';
            document.getElementById('totalPrice').value = house.totalPrice || '';
            document.getElementById('floorArea').value = house.floorArea || '';
            document.getElementById('description').value = house.description || '';
        }

        // 檢視房屋詳細資料 - 更新為使用 Alpine.js
        function viewHouse(houseId) {
            currentEditingId = houseId;

            const house = findHouseById(houseId);
            if (house) {
                // 取得 Alpine.js 實例並載入資料
                const detailModal = document.getElementById('houseDetailModal');
                const alpineInstance = Alpine.$data(detailModal);
                if (alpineInstance) {
                    alpineInstance.loadHouse(house);
                }

                console.log('Alpine.js 載入房屋資料：', house);
            } else {
                console.error('找不到指定的房屋：', houseId);
                alert('找不到指定的房屋資料');
            }
        }

        // 表單驗證
        function validateForm() {
            const form = document.getElementById('houseForm');
            let isValid = true;

            // 清除之前的驗證樣式
            clearValidationStyles();

            // 驗證必填欄位
            const requiredFields = ['houseName', 'address', 'totalPrice', 'floorArea'];

            requiredFields.forEach(fieldId => {
                const field = document.getElementById(fieldId);
                if (!field.value.trim()) {
                    field.classList.add('is-invalid');
                    isValid = false;
                } else {
                    field.classList.add('is-valid');
                }
            });

            // 驗證數值欄位
            const totalPrice = document.getElementById('totalPrice');
            const floorArea = document.getElementById('floorArea');

            if (totalPrice.value && parseFloat(totalPrice.value) <= 0) {
                totalPrice.classList.remove('is-valid');
                totalPrice.classList.add('is-invalid');
                isValid = false;
            }

            if (floorArea.value && parseFloat(floorArea.value) <= 0) {
                floorArea.classList.remove('is-valid');
                floorArea.classList.add('is-invalid');
                isValid = false;
            }

            return isValid;
        }

        // 儲存房屋
        async function saveHouse() {
            const form = document.getElementById('houseForm');

            if (validateForm()) {
                // 收集表單資料
                const formData = {
                    // 新增時不傳送 id，讓後端自動產生
                    houseName: document.getElementById('houseName').value.trim(),
                    address: document.getElementById('address').value.trim(),
                    totalPrice: parseFloat(document.getElementById('totalPrice').value),
                    floorArea: parseFloat(document.getElementById('floorArea').value),
                    description: document.getElementById('description').value.trim() || null
                };

                // 編輯時才加入 id
                if (currentEditingId) {
                    formData.id = currentEditingId;
                }

                console.log('準備儲存的資料：', formData);

                // 顯示儲存中狀態
                const saveButton = document.querySelector('#houseModal .btn-primary');
                const originalText = saveButton.innerHTML;
                saveButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> 儲存中...';
                saveButton.disabled = true;

                try {
                    if (currentEditingId) {
                        // 更新
                        await updateHouseViaAPI(formData);
                    } else {
                        // 新增
                        await createHouseViaAPI(formData);
                    }

                    // 成功後關閉 Modal 並重新載入列表
                    bootstrap.Modal.getInstance(document.getElementById('houseModal')).hide();
                    loadHouseList();

                    // 顯示成功訊息
                    showSuccessMessage(currentEditingId ? '房屋資料更新成功！' : '房屋新增成功！');

                } catch (error) {
                    console.error('儲存房屋時發生錯誤：', error);
                } finally {
                    // 恢復按鈕狀態
                    saveButton.innerHTML = originalText;
                    saveButton.disabled = false;
                }
            }
        }

        // 新增房屋 API 呼叫
        async function createHouseViaAPI(houseData) {
            const response = await fetch(API_BASE_URL, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(houseData)
            });

            if (!response.ok) {
                if (response.status === 400) {
                    // 驗證錯誤 - 顯示伺服器端驗證訊息
                    const errorData = await response.json();
                    showServerValidationErrors(errorData);
                    throw new Error('驗證失敗');
                } else if (response.status === 500) {
                    // 伺服器錯誤
                    const errorData = await response.json();
                    showErrorModal('伺服器錯誤', errorData.message || '建立房屋時發生內部錯誤');
                    throw new Error(errorData.message || '伺服器內部錯誤');
                } else {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
            }

            const result = await response.json();
            console.log('房屋建立成功：', result);
            return result;
        }

        // 更新房屋 API 呼叫
        async function updateHouseViaAPI(houseData) {
            const response = await fetch(`${API_BASE_URL}/${houseData.id}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(houseData)
            });

            if (!response.ok) {
                if (response.status === 400) {
                    // 驗證錯誤 - 顯示伺服器端驗證訊息
                    const errorData = await response.json();
                    showServerValidationErrors(errorData);
                    throw new Error('驗證失敗');
                } else if (response.status === 404) {
                    // 房屋不存在
                    const errorData = await response.json();
                    showErrorModal('房屋不存在', errorData.message || '指定的房屋不存在或已被刪除');
                    throw new Error('房屋不存在');
                } else if (response.status === 500) {
                    // 伺服器錯誤
                    const errorData = await response.json();
                    showErrorModal('伺服器錯誤', errorData.message || '更新房屋時發生內部錯誤');
                    throw new Error(errorData.message || '伺服器內部錯誤');
                } else {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
            }

            const result = await response.json();
            console.log('房屋更新成功：', result);
            return result;
        }

        // 顯示伺服器端驗證錯誤
        function showServerValidationErrors(errorData) {
            console.log('伺服器驗證錯誤：', errorData);

            // 清除之前的驗證樣式
            clearValidationStyles();

            // 處理新的錯誤格式 (Service 層驗證)
            if (errorData.errors && Array.isArray(errorData.errors)) {
                // Service 層回傳的是 string[] 格式
                showValidationErrorAlert(errorData.errors);
                return;
            }

            // 兼容舊的 ModelState 錯誤格式 (如果有其他 API 仍使用)
            if (errorData.errors && typeof errorData.errors === 'object') {
                // 處理 ModelState 錯誤
                let hasErrors = false;

                // 處理一般錯誤訊息 (沒有特定欄位的錯誤)
                if (errorData.errors[''] && errorData.errors[''].length > 0) {
                    showValidationErrorAlert(errorData.errors['']);
                    hasErrors = true;
                }

                // 處理特定欄位的錯誤
                Object.keys(errorData.errors).forEach(fieldName => {
                    if (fieldName && fieldName !== '') {
                        const errors = errorData.errors[fieldName];
                        const fieldElement = getFieldElementByName(fieldName);

                        if (fieldElement && errors.length > 0) {
                            fieldElement.classList.add('is-invalid');

                            // 更新錯誤訊息
                            const feedbackElement = fieldElement.parentNode.querySelector('.invalid-feedback') ||
                                                  fieldElement.closest('.mb-3').querySelector('.invalid-feedback');
                            if (feedbackElement) {
                                feedbackElement.textContent = errors[0]; // 顯示第一個錯誤訊息
                            }
                            hasErrors = true;
                        }
                    }
                });

                if (!hasErrors) {
                    // 如果沒有特定欄位錯誤，顯示一般錯誤訊息
                    const allErrors = Object.values(errorData.errors).flat();
                    if (allErrors.length > 0) {
                        showValidationErrorAlert(allErrors);
                    }
                }
                return;
            }

            // 處理其他格式的錯誤
            showValidationErrorAlert(['儲存時發生驗證錯誤，請檢查輸入內容']);
        }

        // 根據欄位名稱取得對應的 DOM 元素
        function getFieldElementByName(fieldName) {
            const fieldMapping = {
                'HouseName': 'houseName',
                'Address': 'address',
                'TotalPrice': 'totalPrice',
                'FloorArea': 'floorArea',
                'Description': 'description'
            };

            const elementId = fieldMapping[fieldName] || fieldName.toLowerCase();
            return document.getElementById(elementId);
        }

        // 顯示驗證錯誤警告
        function showValidationErrorAlert(errors) {
            // 移除現有的錯誤警告
            const existingAlert = document.querySelector('#houseModal .validation-error-alert');
            if (existingAlert) {
                existingAlert.remove();
            }

            // 建立錯誤警告元素
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-danger validation-error-alert mt-3';
            alertDiv.innerHTML = `
                <i class="fas fa-exclamation-triangle"></i>
                <strong>驗證錯誤：</strong>
                <ul class="mb-0 mt-2">
                    ${errors.map(error => `<li>${escapeHtml(error)}</li>`).join('')}
                </ul>
            `;

            // 插入到表單前面
            const modalBody = document.querySelector('#houseModal .modal-body');
            const form = document.getElementById('houseForm');
            modalBody.insertBefore(alertDiv, form);

            // 滾動到錯誤訊息位置
            alertDiv.scrollIntoView({ behavior: 'smooth', block: 'nearest' });
        }

        // 顯示錯誤模態框
        function showErrorModal(title, message) {
            // 簡單的錯誤顯示，可以之後改為更美觀的模態框
            alert(`${title}\n\n${message}`);
        }

        // 顯示成功訊息
        function showSuccessMessage(message) {
            // 簡單的成功訊息，可以之後改為更美觀的通知
            // 可以使用 Toast 或其他通知組件
            const alertDiv = document.createElement('div');
            alertDiv.className = 'alert alert-success alert-dismissible fade show position-fixed';
            alertDiv.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px;';
            alertDiv.innerHTML = `
                <i class="fas fa-check-circle"></i> ${escapeHtml(message)}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;

            document.body.appendChild(alertDiv);

            // 3 秒後自動消失
            setTimeout(() => {
                if (alertDiv && alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 3000);
        }

        // 清除驗證樣式（增強版）
        function clearValidationStyles() {
            const form = document.getElementById('houseForm');
            const inputs = form.querySelectorAll('.form-control, .form-select');
            inputs.forEach(input => {
                input.classList.remove('is-valid', 'is-invalid');
            });

            // 移除驗證錯誤警告
            const existingAlert = document.querySelector('#houseModal .validation-error-alert');
            if (existingAlert) {
                existingAlert.remove();
            }

            // 重置錯誤訊息為預設值
            const feedbacks = form.querySelectorAll('.invalid-feedback');
            feedbacks.forEach(feedback => {
                const input = feedback.closest('.mb-3').querySelector('.form-control');
                if (input) {
                    const fieldId = input.id;
                    const defaultMessages = {
                        'houseName': '請輸入房屋名稱',
                        'address': '請輸入地址',
                        'totalPrice': '請輸入正確的價格',
                        'floorArea': '請輸入正確的坪數'
                    };
                    feedback.textContent = defaultMessages[fieldId] || '請輸入有效的資料';
                }
            });
        }

        // 搜尋功能
        document.getElementById('searchBtn').addEventListener('click', function() {
            const searchTerm = document.getElementById('searchInput').value.trim();
            console.log('搜尋條件：', searchTerm);

            if (!searchTerm) {
                // 如果搜尋條件為空，顯示全部資料
                renderHouseTable(housesData);
                return;
            }

            // 本地搜尋過濾
            const filteredHouses = housesData.filter(house =>
                house.houseName.toLowerCase().includes(searchTerm.toLowerCase()) ||
                house.address.toLowerCase().includes(searchTerm.toLowerCase())
            );

            renderHouseTable(filteredHouses);
        });

        // 按 Enter 鍵搜尋
        document.getElementById('searchInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                document.getElementById('searchBtn').click();
            }
        });

        // 刪除房屋
        function deleteHouse(houseId) {
            currentDeletingId = houseId;

            const house = findHouseById(houseId);
            const houseName = house ? house.houseName : '未知房屋';

            document.getElementById('deleteHouseName').textContent = houseName;

            const deleteModal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
            deleteModal.show();
        }

        // 確認刪除
        async function confirmDelete() {
            if (currentDeletingId) {
                console.log('刪除房屋 ID：', currentDeletingId);

                // 顯示刪除中狀態
                const deleteButton = document.querySelector('#deleteConfirmModal .btn-danger');
                const originalText = deleteButton.innerHTML;
                deleteButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> 刪除中...';
                deleteButton.disabled = true;

                try {
                    // 呼叫刪除 API
                    await deleteHouseViaAPI(currentDeletingId);

                    // 成功後關閉 Modal 並重新載入列表
                    bootstrap.Modal.getInstance(document.getElementById('deleteConfirmModal')).hide();
                    loadHouseList();

                    // 顯示成功訊息
                    showSuccessMessage('房屋刪除成功！');

                } catch (error) {
                    console.error('刪除房屋時發生錯誤：', error);
                } finally {
                    // 恢復按鈕狀態
                    deleteButton.innerHTML = originalText;
                    deleteButton.disabled = false;
                    currentDeletingId = null;
                }
            }
        }

        // 刪除房屋 API 呼叫
        async function deleteHouseViaAPI(houseId) {
            const response = await fetch(`${API_BASE_URL}/${houseId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (!response.ok) {
                if (response.status === 404) {
                    // 房屋不存在
                    const errorData = await response.json();
                    showErrorModal('房屋不存在', errorData.message || '指定的房屋已被刪除或不存在');
                    throw new Error('房屋不存在');
                } else if (response.status === 400) {
                    // 無效的 ID 格式
                    const errorData = await response.json();
                    showErrorModal('無效的房屋 ID', errorData.message || '房屋 ID 格式不正確');
                    throw new Error('無效的房屋 ID');
                } else if (response.status === 500) {
                    // 伺服器錯誤
                    const errorData = await response.json();
                    showErrorModal('伺服器錯誤', errorData.message || '刪除房屋時發生內部錯誤');
                    throw new Error(errorData.message || '伺服器內部錯誤');
                } else {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
            }

            const result = await response.json();
            console.log('房屋刪除成功：', result);
            return result;
        }
    </script>
}

<style>
    .table th {
        white-space: nowrap;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.875rem;
    }

    .text-success {
        font-weight: 600;
    }

    .form-control-plaintext {
        padding-left: 0;
        border-bottom: 1px solid #dee2e6;
        background-color: transparent;
    }

    .modal-lg {
        max-width: 800px;
    }

    .invalid-feedback {
        display: block;
    }

    .pagination {
        margin-top: 1rem;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
    }

    #loadingIndicator {
        min-height: 200px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    #noDataMessage {
        min-height: 300px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }
</style>